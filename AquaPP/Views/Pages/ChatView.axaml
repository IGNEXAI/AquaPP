<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:models="clr-namespace:AquaPP.Models"
             xmlns:i="https://github.com/projektanker/icons.avalonia"
             xmlns:ic="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:converters="clr-namespace:AquaPP.Converters"
             xmlns:suki="https://github.com/kikipoulet/SukiUI"
             xmlns:chat="clr-namespace:AquaPP.ViewModels.Pages"
             xmlns:visualBasic="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic.Core"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="AquaPP.Views.Pages.ChatView"
             x:DataType="chat:ChatViewModel">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key='Light'>
                    <SolidColorBrush x:Key='ChatIcon'>DodgerBlue</SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key='Dark'>
                    <SolidColorBrush x:Key='ChatIcon'>White</SolidColorBrush>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>

        <converters:SenderToAlignmentConverter x:Key="SenderToAlignmentConverterInstance" />
        <converters:SenderToIconData x:Key="SenderToIconDataConverterInstance" />
        <converters:SenderToBrushConverter x:Key="SenderToBrushConverterInstance" />
    </UserControl.Resources>

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <chat:ChatViewModel />
    </Design.DataContext>

    <Grid RowDefinitions="*,Auto">
        <ScrollViewer x:Name="ChatScrollViewer" Grid.Row="0" VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Messages}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="models:ChatMessage">
                        <StackPanel Margin="0,5">
                            <i:Icon Width="34" FontSize="25"
                                    Foreground="{DynamicResource ChatIcon}"
                                    Value="{Binding Sender, Converter={StaticResource SenderToIconDataConverterInstance}}"
                                    HorizontalAlignment="{Binding Sender, Converter={StaticResource SenderToAlignmentConverterInstance}}" />
                            <Border Margin="5" CornerRadius="5"
                                    MaxWidth="450"
                                    Background="{Binding Sender, Converter={StaticResource SenderToBrushConverterInstance}}"
                                    HorizontalAlignment="{Binding Sender, Converter={StaticResource SenderToAlignmentConverterInstance}}">
                                <TextBlock Text="{Binding Content}"
                                           FontSize="15"
                                           Margin="10"
                                           TextWrapping="Wrap" />
                            </Border>
                            <suki:Loading IsVisible="{Binding IsLoading}" />
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <Grid Grid.Row="1" ColumnDefinitions="*,Auto">
            <TextBox Text="{Binding Message, Mode=TwoWay}" Grid.Column="0"
                     Margin="5">
                <!--<visualBasic:Interaction.>
                            <EventTriggerBehavior EventName="KeyDown">
                                <ic: Key="Return">
                                    <InvokeCommandAction Command="{Binding SendCommand}" />
                                </ic:>
                            </EventTriggerBehavior>
                        </visualBasic:Interaction.B>-->
            </TextBox>
            <Button Command="{Binding SendCommand}" Grid.Column="1" Content="Send" Margin="5" />
        </Grid>
    </Grid>

</UserControl>